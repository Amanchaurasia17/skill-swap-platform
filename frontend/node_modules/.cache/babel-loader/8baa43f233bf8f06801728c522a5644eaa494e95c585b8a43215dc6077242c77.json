{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle response errors globally\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API methods using the same naming as in our components\nconst apiMethods = {\n  // Auth\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getCurrentUser: () => api.get('/auth/me'),\n  // Users\n  getAllUsers: () => api.get('/users/public'),\n  getUserById: id => api.get(`/users/${id}`),\n  updateProfile: userData => api.put('/users/profile', userData),\n  deleteUser: id => api.delete(`/admin/users/${id}`),\n  // Swap Requests\n  createSwapRequest: swapData => api.post('/swaps', swapData),\n  getUserSwapRequests: () => api.get('/swaps/my'),\n  getSwapRequest: id => api.get(`/swaps/${id}`),\n  updateSwapRequestStatus: (id, status) => api.put(`/swaps/${id}`, {\n    status\n  }),\n  deleteSwapRequest: id => api.delete(`/admin/swaps/${id}`),\n  getAllSwapRequests: () => api.get('/admin/swaps'),\n  // Feedback\n  submitFeedback: (requestId, feedbackData) => api.post(`/swaps/${requestId}/feedback`, feedbackData),\n  // Admin\n  getAdminStats: () => api.get('/admin/stats')\n};\n\n// Export individual API categories (for backward compatibility)\nexport const authAPI = {\n  register: apiMethods.register,\n  login: apiMethods.login,\n  getCurrentUser: apiMethods.getCurrentUser\n};\nexport const userAPI = {\n  getAllUsers: apiMethods.getAllUsers,\n  getUserById: apiMethods.getUserById,\n  updateProfile: apiMethods.updateProfile\n};\nexport const swapAPI = {\n  createSwapRequest: apiMethods.createSwapRequest,\n  getUserSwapRequests: apiMethods.getUserSwapRequests,\n  getSwapRequest: apiMethods.getSwapRequest,\n  updateSwapRequestStatus: apiMethods.updateSwapRequestStatus,\n  getAllSwapRequests: apiMethods.getAllSwapRequests\n};\nexport const adminAPI = {\n  getAllUsers: apiMethods.getAllUsers,\n  getAllSwapRequests: apiMethods.getAllSwapRequests,\n  getAdminStats: apiMethods.getAdminStats,\n  deleteUser: apiMethods.deleteUser,\n  deleteSwapRequest: apiMethods.deleteSwapRequest\n};\n\n// Utility functions\nexport const setAuthToken = token => {\n  if (token) {\n    localStorage.setItem('authToken', token);\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    localStorage.removeItem('authToken');\n    delete api.defaults.headers.common['Authorization'];\n  }\n};\nexport const getAuthToken = () => {\n  return localStorage.getItem('authToken');\n};\nexport const isAuthenticated = () => {\n  return !!getAuthToken();\n};\n\n// Export default API object with all methods\nexport default apiMethods;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","apiMethods","register","userData","post","login","credentials","getCurrentUser","get","getAllUsers","getUserById","id","updateProfile","put","deleteUser","delete","createSwapRequest","swapData","getUserSwapRequests","getSwapRequest","updateSwapRequestStatus","deleteSwapRequest","getAllSwapRequests","submitFeedback","requestId","feedbackData","getAdminStats","authAPI","userAPI","swapAPI","adminAPI","setAuthToken","setItem","defaults","common","getAuthToken","isAuthenticated"],"sources":["D:/task/odoo/skill-swap-platform/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add auth token to requests if available\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Handle response errors globally\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API methods using the same naming as in our components\r\nconst apiMethods = {\r\n  // Auth\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  getCurrentUser: () => api.get('/auth/me'),\r\n  \r\n  // Users\r\n  getAllUsers: () => api.get('/users/public'),\r\n  getUserById: (id) => api.get(`/users/${id}`),\r\n  updateProfile: (userData) => api.put('/users/profile', userData),\r\n  deleteUser: (id) => api.delete(`/admin/users/${id}`),\r\n  \r\n  // Swap Requests\r\n  createSwapRequest: (swapData) => api.post('/swaps', swapData),\r\n  getUserSwapRequests: () => api.get('/swaps/my'),\r\n  getSwapRequest: (id) => api.get(`/swaps/${id}`),\r\n  updateSwapRequestStatus: (id, status) => api.put(`/swaps/${id}`, { status }),\r\n  deleteSwapRequest: (id) => api.delete(`/admin/swaps/${id}`),\r\n  getAllSwapRequests: () => api.get('/admin/swaps'),\r\n  \r\n  // Feedback\r\n  submitFeedback: (requestId, feedbackData) => api.post(`/swaps/${requestId}/feedback`, feedbackData),\r\n  \r\n  // Admin\r\n  getAdminStats: () => api.get('/admin/stats'),\r\n};\r\n\r\n// Export individual API categories (for backward compatibility)\r\nexport const authAPI = {\r\n  register: apiMethods.register,\r\n  login: apiMethods.login,\r\n  getCurrentUser: apiMethods.getCurrentUser,\r\n};\r\n\r\nexport const userAPI = {\r\n  getAllUsers: apiMethods.getAllUsers,\r\n  getUserById: apiMethods.getUserById,\r\n  updateProfile: apiMethods.updateProfile,\r\n};\r\n\r\nexport const swapAPI = {\r\n  createSwapRequest: apiMethods.createSwapRequest,\r\n  getUserSwapRequests: apiMethods.getUserSwapRequests,\r\n  getSwapRequest: apiMethods.getSwapRequest,\r\n  updateSwapRequestStatus: apiMethods.updateSwapRequestStatus,\r\n  getAllSwapRequests: apiMethods.getAllSwapRequests,\r\n};\r\n\r\nexport const adminAPI = {\r\n  getAllUsers: apiMethods.getAllUsers,\r\n  getAllSwapRequests: apiMethods.getAllSwapRequests,\r\n  getAdminStats: apiMethods.getAdminStats,\r\n  deleteUser: apiMethods.deleteUser,\r\n  deleteSwapRequest: apiMethods.deleteSwapRequest,\r\n};\r\n\r\n// Utility functions\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    localStorage.setItem('authToken', token);\r\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  } else {\r\n    localStorage.removeItem('authToken');\r\n    delete api.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem('authToken');\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  return !!getAuthToken();\r\n};\r\n\r\n// Export default API object with all methods\r\nexport default apiMethods;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}