{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\odoo\\\\skill-swap-platform\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI, setAuthToken, getAuthToken } from '../services/api';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: null,\n  isLoading: true,\n  isAuthenticated: false\n};\n\n// Actions\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER: 'LOAD_USER',\n  UPDATE_USER: 'UPDATE_USER'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case AUTH_ACTIONS.LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for existing token on app start\n  useEffect(() => {\n    const token = getAuthToken();\n    const savedUser = localStorage.getItem('user');\n    console.log('AuthContext: Checking for existing auth...', {\n      token: !!token,\n      savedUser: !!savedUser\n    });\n    if (token && savedUser) {\n      try {\n        const user = JSON.parse(savedUser);\n        setAuthToken(token);\n        console.log('AuthContext: Restoring user session:', user.name);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user,\n            token\n          }\n        });\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        logout();\n      }\n    } else {\n      console.log('AuthContext: No existing auth found');\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE\n      });\n    }\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authAPI.login(credentials);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Save to localStorage\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Set axios default header\n      setAuthToken(token);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE\n      });\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed'\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await authAPI.register(userData);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Save to localStorage\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Set axios default header\n      setAuthToken(token);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE\n      });\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed'\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    setAuthToken(null);\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n  };\n\n  // Load current user\n  const loadUser = async () => {\n    try {\n      const response = await authAPI.getCurrentUser();\n      const user = response.data;\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER,\n        payload: user\n      });\n      return user;\n    } catch (error) {\n      console.error('Error loading user:', error);\n      logout();\n      throw error;\n    }\n  };\n\n  // Update user profile\n  const updateUser = userData => {\n    const updatedUser = {\n      ...state.user,\n      ...userData\n    };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_USER,\n      payload: userData\n    });\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === 'admin';\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    loadUser,\n    updateUser,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","setAuthToken","getAuthToken","jsxDEV","_jsxDEV","initialState","user","token","isLoading","isAuthenticated","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOAD_USER","UPDATE_USER","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","savedUser","localStorage","getItem","console","log","JSON","parse","name","error","logout","login","credentials","response","data","setItem","stringify","success","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","removeItem","loadUser","getCurrentUser","updateUser","updatedUser","isAdmin","_state$user","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/task/odoo/skill-swap-platform/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI, setAuthToken, getAuthToken } from '../services/api';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isLoading: true,\r\n  isAuthenticated: false,\r\n};\r\n\r\n// Actions\r\nconst AUTH_ACTIONS = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  LOAD_USER: 'LOAD_USER',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case AUTH_ACTIONS.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    case AUTH_ACTIONS.LOAD_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case AUTH_ACTIONS.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check for existing token on app start\r\n  useEffect(() => {\r\n    const token = getAuthToken();\r\n    const savedUser = localStorage.getItem('user');\r\n    \r\n    console.log('AuthContext: Checking for existing auth...', { token: !!token, savedUser: !!savedUser });\r\n    \r\n    if (token && savedUser) {\r\n      try {\r\n        const user = JSON.parse(savedUser);\r\n        setAuthToken(token);\r\n        console.log('AuthContext: Restoring user session:', user.name);\r\n        dispatch({\r\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n          payload: { user, token },\r\n        });\r\n      } catch (error) {\r\n        console.error('Error parsing saved user:', error);\r\n        logout();\r\n      }\r\n    } else {\r\n      console.log('AuthContext: No existing auth found');\r\n      dispatch({ type: AUTH_ACTIONS.LOGIN_FAILURE });\r\n    }\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (credentials) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n      \r\n      const response = await authAPI.login(credentials);\r\n      const { token, user } = response.data;\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      // Set axios default header\r\n      setAuthToken(token);\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: { user, token },\r\n      });\r\n      \r\n      return { success: true, user };\r\n    } catch (error) {\r\n      dispatch({ type: AUTH_ACTIONS.LOGIN_FAILURE });\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.error || 'Login failed',\r\n      };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n      \r\n      const response = await authAPI.register(userData);\r\n      const { token, user } = response.data;\r\n      \r\n      // Save to localStorage\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      // Set axios default header\r\n      setAuthToken(token);\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: { user, token },\r\n      });\r\n      \r\n      return { success: true, user };\r\n    } catch (error) {\r\n      dispatch({ type: AUTH_ACTIONS.LOGIN_FAILURE });\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.error || 'Registration failed',\r\n      };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('user');\r\n    setAuthToken(null);\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n  };\r\n\r\n  // Load current user\r\n  const loadUser = async () => {\r\n    try {\r\n      const response = await authAPI.getCurrentUser();\r\n      const user = response.data;\r\n      \r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOAD_USER,\r\n        payload: user,\r\n      });\r\n      \r\n      return user;\r\n    } catch (error) {\r\n      console.error('Error loading user:', error);\r\n      logout();\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Update user profile\r\n  const updateUser = (userData) => {\r\n    const updatedUser = { ...state.user, ...userData };\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    \r\n    dispatch({\r\n      type: AUTH_ACTIONS.UPDATE_USER,\r\n      payload: userData,\r\n    });\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return state.user?.role === 'admin';\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    loadUser,\r\n    updateUser,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}